version: "3.6"
services: 
# Admin Tools
  portainer-agent:
    image: portainer/agent
    container_name: portainer-agent
    restart: unless-stopped
    command: -H unix:///var/run/docker.sock
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
# Media Server
  emby:
    image: emby/embyserver:latest
    container_name: "emby"
    restart: unless-stopped
    network_mode: host
    volumes:
      - /mnt/media:/media
      - ${USERDIR}/docker/emby:/config
      - /mnt/misc:/Misc
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/emby:/emby
    devices:
        - /dev/dri/renderD128:/dev/dri/renderD128
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - GIDLIST=44
      - TZ=${TZ}
  audiobookshelf:
    container_name: "bookshelf"
    image: advplyr/audiobookshelf
    ports:
      - 8097:80
    volumes:
      - /mnt/media/Audible Books:/audiobooks
      - ${USERDIR}/docker/bookshelf/metadata:/metadata
      - ${USERDIR}/docker/bookshelf:/config
  # emby-beta:
    # image: "emby/embyserver:beta"
    # container_name: "emby-beta"
    # devices:
      # - /dev/dri/renderD128:/dev/dri/renderD128
    # volumes:
      # - /mnt/media:/media
      # - ${USERDIR}/docker/emby-beta:/config
      # - /mnt/misc:/Misc
      # - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /mnt/emby/emby-beta:/emby
    # network_mode: host
    # restart: unless-stopped
    # environment:
      # - UID=${PUID}
      # - GID=${PGID}
      # - GIDLIST=44
      # - TZ=${TZ}
  xteve:
    image: tnwhitwell/xteve:latest
    container_name: xteve
    ports:
      - "34400:34400"
    volumes:
      - ${USERDIR}/docker/xteve:/config
      - ${USERDIR}/docker/xteve/tmp:/tmp/xteve
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    environment:
      - UID=${PUID}
      - GID=${PGID}
      - TZ=${TZ}

# Downloading Clients
  sabnzbd:
    image: "linuxserver/sabnzbd"
    container_name: "sabnzbd"
    volumes:
      - ${USERDIR}/docker/sabnzbd:/config
      #- ${USERDIR}/docker/mp4_automator:/mp4_automator
      - /mnt/misc/downloads:/downloads
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # MP4 Automator
      - ${USERDIR}/docker/sma:/usr/local/sma/config   
    ports:
      - "8070:8080"
    restart: unless-stopped
    devices:
        - /dev/dri/renderD128:/dev/dri/renderD128
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - GIDLIST=44
      - TZ=${TZ}  
      - DOCKER_MODS=mdhiggins/sma-mod:latest
  deluge:
    image: "linuxserver/deluge:145"
    container_name: "deluge"
    volumes:
      - ${USERDIR}/docker/deluge:/config
      - /mnt/misc/downloads:/downloads
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # MP4 Automator
      # - ${USERDIR}/docker/sma:/usr/local/sma/config
    network_mode: host
    # ports:
      # - "1025:1025"
      # - "53160:53160"
      # - "8081:8112"
      # - "58846:58846" 
      
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} 
      # - DOCKER_MODS=mdhiggins/sma-mod:latest
# Arr's
  sonarr:
    container_name: "sonarr"
    image: ghcr.io/linuxserver/sonarr
    volumes:
      - ${USERDIR}/docker/sonarr:/config
      - /mnt/misc/downloads:/downloads
      - /mnt/misc/Recyle Bin/Sonarr:/Recyle Bin
      - /mnt/media/TV:/tv
      - /mnt/media/Anime TV:/anime tv
      - /mnt/media/Ended TV:/ended tv
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #MP4 Automator
      - ${USERDIR}/docker/sma:/usr/local/sma/config
      #Backup
      - /mnt/misc/backups/arrs/Sonarr:/Backup
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - "8072:8989"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - GIDLIST=44
      - TZ=${TZ}  
      - DOCKER_MODS=mdhiggins/sma-mod:latest
  radarr:
    container_name: "radarr"
    image: linuxserver/radarr
    volumes:
      - ${USERDIR}/docker/radarr:/config
      - /mnt/misc/downloads:/downloads
      - /mnt/misc/Recyle Bin/Radarr:/Recyle Bin
      - /mnt/media/Movies:/movies
      - /mnt/media/Anime Movies:/anime movies
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # MP4 Automator
      - ${USERDIR}/docker/sma:/usr/local/sma/config
      #Backup
      - /mnt/misc/backups/arrs/Radarr:/Backup
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    ports:
      - "8073:7878"
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - GIDLIST=44
      - TZ=${TZ}  
      - DOCKER_MODS=mdhiggins/sma-mod:latest
  lidarr:
    image: "linuxserver/lidarr"
    container_name: "lidarr"
    volumes:
      - ${USERDIR}/docker/lidarr:/config
      - /mnt/misc/downloads:/downloads
      - /mnt/misc/Recyle Bin/Lidarr:/Recyle Bin
      - /mnt/media/Music:/music
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #Backup
      - /mnt/misc/backups/arrs/Lidarr:/Backup
    ports:
      - "8074:8686" 
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
  readarr:
    image: "linuxserver/readarr:nightly"
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${USERDIR}/docker/readarr:/config
      - /mnt/media/Books:/books #optional
      - /mnt/media/Audiobooks:/audiobooks #optional
      - /mnt/misc/downloads:/downloads #optional
      - /mnt/misc/Recyle Bin/Lidarr:/Recyle Bin
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #Backup
      - /mnt/misc/backups/arrs/Readarr:/Backup
    ports:
      - 8075:8787
    restart: unless-stopped
  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:develop
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}  
    volumes:
      - ${USERDIR}/docker/prowlarr:/config
      #Backup
      - /mnt/misc/backups/arrs/Prowlarr:/Backup
    ports:
      - 8071:9696
    restart: unless-stopped
#Misc downloading software
  ombi:
    image: "linuxserver/ombi:latest"
    container_name: "ombi"
    volumes:
      - ${USERDIR}/docker/ombi:/config
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 8090:3579 
    restart: unless-stopped
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
  podgrab:
    image: akhilrex/podgrab
    container_name: podgrab
    environment:
      - CHECK_FREQUENCY=240
     # - PASSWORD=password     ## Uncomment to enable basic authentication, username = podgrab
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ} 
    volumes:
      - ${USERDIR}/docker/podgrab:/config
      - /mnt/media/Podcast:/assets
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8091:8080
    restart: unless-stopped
  metube:
    image: alexta69/metube
    container_name: metube
    restart: unless-stopped
    user: "1000:1000"
    ports:
      - 8092:8081
    volumes:
      - /mnt/misc/downloads/YouTube:/downloads    
    environment:
      - URL_PREFIX=/metube
